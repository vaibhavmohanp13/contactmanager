{"version":3,"sources":["context.js","components/contact/Contact.js","components/contact/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contact/AddContact.js","components/contact/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contacts","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","Contacts","Fragment","contact_Contact","Header","branding","href","defaultProps","About","match","params","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","put","console","log","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0SAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAASF,MAE5G,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAMsBC,IAAMC,IAAI,8CANhC,OAMUN,EANVE,EAAAK,KAQI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OARlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAYI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAdpBzC,EAAA,CAA8B0C,aAoBjBC,EAAW5D,EAAQ4D,SCyBjBC,6MAnEbzD,MAAQ,CACN0D,iBAAiB,KAGnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMc,OAAN,8CAAAlD,OAA2DF,IAFrD,OAIZqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAJhCmC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAMZd,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IANhC,wBAAAmC,EAAAO,SAAAV,EAAA,iJAaP,IAAAsB,EAAA5C,KAAA6C,EAC4B7C,KAAKmC,MAAMhD,SAAtCG,EADDuD,EACCvD,GAAIwD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBR,EAAoBxC,KAAKlB,MAAzB0D,gBACR,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,uBACbhB,EAAAb,EAAAc,cAAA,UACGY,EAAM,IACPb,EAAAb,EAAAc,cAAA,KACEgB,QAAS,kBACPN,EAAKhC,SAAS,CACZ4B,iBAAkBI,EAAK9D,MAAM0D,mBAGjCS,UAAU,kBACVE,MAAO,CAAEC,OAAQ,aAEnBnB,EAAAb,EAAAc,cAAA,KACEgB,QAASN,EAAKH,cAAcY,KAAKT,EAAMtD,EAAIqB,GAC3CsC,UAAU,cACVE,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,SAErDtB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAE,iBAAAjE,OAAmBF,IACzB2C,EAAAb,EAAAc,cAAA,KACEe,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,aAIxDf,EACCP,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,WAAyCF,GACzCd,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,YAA0CD,EAA1C,MAEA,eAvDIX,aC+BPqB,mLA/BX,OACEzB,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMuC,SAAP,KACE1B,EAAAb,EAAAc,cAAA,MAAIe,UAAU,kBAAiBhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,WAA/B,SACC9D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC0B,EAAD,CAAS7C,IAAK1B,EAAQC,GAAIH,SAAUE,gBAV7BgD,aCAjBwB,EAAS,SAAC1B,GAAU,IACd2B,EAAa3B,EAAb2B,SACV,OACC7B,EAAAb,EAAAc,cAAA,OAAKe,UAAU,gEACdhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACXhB,EAAAb,EAAAc,cAAA,KAAG6B,KAAK,IAAId,UAAU,gBAAgBa,GACtC7B,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIe,UAAU,sBACVhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACVhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YAAvB,SAIJhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACVhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAAlC,QAIJhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACVhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAA5B,eAepBY,EAAOG,aAAe,CAClBF,SAAU,UAQED,QC7CDI,EAAA,SAAA9B,GACb,OACEF,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cAAd,yBACCd,EAAM+B,MAAMC,OAAO7E,GACpB2C,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,gCACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,kBAAb,mBCNS,SAASmB,IACtB,OACEnC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aACdhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,OADA,mBAGAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,+DCJAoB,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAzB,EAMIwB,EANJxB,KACA9B,EAKIsD,EALJtD,MACAwD,EAIIF,EAJJE,YACAxF,EAGIsF,EAHJtF,KACAyF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEzC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,cACbhB,EAAAb,EAAAc,cAAA,SAAOyC,QAAS7B,GAAOyB,GACvBtC,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN8D,KAAMA,EACNG,UAAW2B,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbxD,MAAOA,EACPyD,SAAUA,IAEXC,GAASzC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,oBAAoByB,KAenDL,EAAeL,aAAe,CAC5BhF,KAAM,QAGOqF,QC0DAS,6MAjGbhG,MAAQ,CACNgE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP+B,OAAQ,MAIVC,+CAAW,SAAA1D,EAAOX,EAAUsE,GAAjB,IAAAC,EAAApC,EAAAC,EAAAC,EAAAmC,EAAA5D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTsD,EAAEG,iBADOF,EAE8BpF,EAAKhB,MAApCgE,EAFCoC,EAEDpC,KAAMC,EAFLmC,EAEKnC,MAAOC,EAFZkC,EAEYlC,MAFZkC,EAEmBH,OAEf,KAATjC,EAJK,CAAArB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAAEmE,OAAQ,CAAEjC,KAAM,sBALzBrB,EAAA4D,OAAA,oBAQK,KAAVtC,EARK,CAAAtB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAAEmE,OAAQ,CAAEhC,MAAO,uBAT1BtB,EAAA4D,OAAA,oBAYK,KAAVrC,EAZK,CAAAvB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAAEmE,OAAQ,CAAE/B,MAAO,uBAb1BvB,EAAA4D,OAAA,yBAiBHF,EAAa,CACjBrC,OACAC,QACAC,SApBOvB,EAAAE,KAAA,GAsBSC,IAAM0D,KAAK,6CAA6CH,GAtBjE,QAsBH5D,EAtBGE,EAAAK,KAuBTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACZkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP+B,OAAO,KAGTjF,EAAKqC,MAAMoD,QAAQC,KAAK,KAjCf,yBAAA/D,EAAAO,SAAAV,gEAmCXmD,SAAW,SAAAQ,GAAC,OAAInF,EAAKc,SAAL3B,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBgG,EAAES,OAAO5C,KAAOmC,EAAES,OAAO1E,iFACjD,IAAA4B,EAAA5C,KAAA2F,EACgC3F,KAAKlB,MAApCgE,EADD6C,EACC7C,KAAMC,EADP4C,EACO5C,MAAOC,EADd2C,EACc3C,MAAO+B,EADrBY,EACqBZ,OAE5B,OACE9C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,eACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAM8C,SAAUpC,EAAKoC,SAAS3B,KAAKT,EAAMjC,IACvCsB,EAAAb,EAAAc,cAAC0D,EAAD,CACErB,MAAM,OACNzB,KAAK,OACL0B,YAAY,eACZxD,MAAO8B,EACP2B,SAAU7B,EAAK6B,SACfC,MAAOK,EAAOjC,OAEhBb,EAAAb,EAAAc,cAAC0D,EAAD,CACErB,MAAM,QACNzB,KAAK,QACL0B,YAAY,gBACZxD,MAAO+B,EACP0B,SAAU7B,EAAK6B,SACfzF,KAAK,QACL0F,MAAOK,EAAOhC,QAEhBd,EAAAb,EAAAc,cAAC0D,EAAD,CACErB,MAAM,QACNzB,KAAK,QACL0B,YAAY,gBACZxD,MAAOgC,EACPyB,SAAU7B,EAAK6B,SACfC,MAAOK,EAAO/B,QAGhBf,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNiC,UAAU,wCAtFLZ,aCkHVwD,6MAjHb/G,MAAQ,CACNgE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP+B,OAAQ,MAcVC,+CAAW,SAAA1D,EAAOX,EAAUsE,GAAjB,IAAAC,EAAApC,EAAAC,EAAAC,EAAA8C,EAAAxG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTsD,EAAEG,iBADOF,EAE8BpF,EAAKhB,MAApCgE,EAFCoC,EAEDpC,KAAMC,EAFLmC,EAEKnC,MAAOC,EAFZkC,EAEYlC,MAFZkC,EAEmBH,OAEf,KAATjC,EAJK,CAAArB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAAEmE,OAAQ,CAAEjC,KAAM,sBALzBrB,EAAA4D,OAAA,oBAQK,KAAVtC,EARK,CAAAtB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAAEmE,OAAQ,CAAEhC,MAAO,uBAT1BtB,EAAA4D,OAAA,oBAYK,KAAVrC,EAZK,CAAAvB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAAEmE,OAAQ,CAAE/B,MAAO,uBAb1BvB,EAAA4D,OAAA,yBAiBHS,EAAgB,CAClBhD,OACAC,QACAC,SAGI1D,EAAOQ,EAAKqC,MAAM+B,MAAMC,OAAxB7E,GAvBCmC,EAAAE,KAAA,GAyBSC,IAAMmE,IAAN,8CAAAvG,OAAwDF,GAAMwG,GAzBvE,QAyBHvE,EAzBGE,EAAAK,KA0BbkE,QAAQC,IAAI1E,EAAIQ,MACZpB,EAAS,CACL3B,KAAK,iBAAiBO,QAAQgC,EAAIQ,OAItCjC,EAAKc,SAAS,CACZkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP+B,OAAO,KAGTjF,EAAKqC,MAAMoD,QAAQC,KAAK,KAvCf,yBAAA/D,EAAAO,SAAAV,gEAyCXmD,SAAW,SAAAQ,GAAC,OAAInF,EAAKc,SAAL3B,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBgG,EAAES,OAAO5C,KAAOmC,EAAES,OAAO1E,qNApDhD1B,EAAOU,KAAKmC,MAAM+B,MAAMC,OAAxB7E,YACUsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApEiC,SACAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACVkC,KAAMzD,EAAQyD,KACdC,MAAO1D,EAAQ0D,MACfC,MAAO3D,EAAQ2D,2IA+CZ,IAAAJ,EAAA5C,KAAA2F,EACgC3F,KAAKlB,MAApCgE,EADD6C,EACC7C,KAAMC,EADP4C,EACO5C,MAAOC,EADd2C,EACc3C,MAAO+B,EADrBY,EACqBZ,OAE5B,OACE9C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,gBACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAM8C,SAAUpC,EAAKoC,SAAS3B,KAAKT,EAAMjC,IACvCsB,EAAAb,EAAAc,cAAC0D,EAAD,CACErB,MAAM,OACNzB,KAAK,OACL0B,YAAY,eACZxD,MAAO8B,EACP2B,SAAU7B,EAAK6B,SACfC,MAAOK,EAAOjC,OAEhBb,EAAAb,EAAAc,cAAC0D,EAAD,CACErB,MAAM,QACNzB,KAAK,QACL0B,YAAY,gBACZxD,MAAO+B,EACP0B,SAAU7B,EAAK6B,SACfzF,KAAK,QACL0F,MAAOK,EAAOhC,QAEhBd,EAAAb,EAAAc,cAAC0D,EAAD,CACErB,MAAM,QACNzB,KAAK,QACL0B,YAAY,gBACZxD,MAAOgC,EACPyB,SAAU7B,EAAK6B,SACfC,MAAOK,EAAO/B,QAGhBf,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,eACNiC,UAAU,wCAtGJZ,aCyBX6D,6MA1BXpH,MAAQ,CACJqH,MAAO,GACPC,KAAM,uFAGS,IAAAxD,EAAA5C,KACfqG,MAAM,gDACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAvE,GAAI,OAAIa,EAAKhC,SAAS,CACxBuF,MAAOpE,EAAKoE,MACZC,KAAKrE,EAAKqE,0CAMX,IAAAlB,EACmBlF,KAAKlB,MAArBqH,EADHjB,EACGiB,MAAOC,EADVlB,EACUkB,KACjB,OACEnE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKiE,GACLlE,EAAAb,EAAAc,cAAA,SAAIkE,WAvBO/D,aCsCJoE,gMAtBX,OACExE,EAAAb,EAAAc,cAACwE,EAAD,KACEzE,EAAAb,EAAAc,cAACsB,EAAA,EAAD,KACAvB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,OACbhB,EAAAb,EAAAc,cAACyE,EAAD,CAAQ7C,SAAS,oBACjB7B,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,KACE3E,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjCzB,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWjC,IAC5C7C,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWlB,IACjD5D,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW9C,IAC1ChC,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrCjE,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOG,UAAW3C,gBAdd/B,cCJE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2DCbNkD,IAASC,OAAOpF,EAAAb,EAAAc,cAACoF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.7e19fc5b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n          ...state,\n          contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload):contact)\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  // onShowClick = () =>{\n  //   this.setState({showContactInfo: !this.state.showContactInfo});\n  // }\n  render() {\n    const { id, name, email, phone } = this.props.contacts;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fa fa-sort-desc\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    className=\"fa fa-pencil\"\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"black\" }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Emails: {email}</li>\n                  <li className=\"list-group-item\">Contact: {phone} </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contacts: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contacts={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n\n    // const { contacts } = this.state;\n    // return (\n    //   <React.Fragment>\n    //     {contacts.map(contact => (\n    //       <Contact\n    //         key={contact.id}\n    //         contacts={contact}\n    //         deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n    //       />\n    //     ))}\n    //   </React.Fragment>\n    // );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n \nconst Header = (props) => {\n    const { branding } = props;\n  return (\n   <nav className=\"nav navbar navabar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n    <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">\n                    Home\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/contact/add\" className=\"nav-link\">\n                    Add\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/about\" className=\"nav-link\">\n                        About\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    </div>\n   </nav>\n  )\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\n// const headerStyle ={\n//     color: 'green', \n//     fontSize:'50px'\n// }\n\nexport default  Header;","import React from 'react'\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"dispplay-4\">About Contact Manager</h1>\n      {props.match.params.id}\n      <p className=\"lead\">Simple app to manage Contact</p>\n      <p className=\"text-secondary\">version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n      <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry! This page is not found</p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  // validation\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone, errors } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n    \n    //clear the form\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors:{}\n    });\n    //redirect the form\n    this.props.history.push('/');\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name..\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email..\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone..\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block btn-light\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = res.data;\n    this.setState({\n        name: contact.name,\n        email: contact.email,\n        phone: contact.phone\n    })\n}\n  // validation\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone, errors } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updateContact = {\n        name,\n        email,\n        phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\nconsole.log(res.data)\n    dispatch({\n        type:'UPDATE_CONTACT',payload:res.data\n    })\n    \n    //clear the form\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors:{}\n    });\n    //redirect the form\n    this.props.history.push('/');\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name..\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email..\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone..\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Edit Contact\"\n                    className=\"btn btn-block btn-light\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n        .then(response => response.json())\n        .then(data => this.setState({\n            title: data.title,\n            body:data.body\n        }));\n    }\n\n\n\n  render() {\n      const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contact/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contact/AddContact\";\nimport EditContact from \"./components/contact/EditContact\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about/:id\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}